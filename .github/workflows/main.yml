name: Build
on:
  push:
    branches: master
  pull_request:
    branches: master
  workflow_dispatch:
jobs:
  Windows:
    runs-on: windows-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          submodules: true

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.1

      - name: Restore Previous Cache
        id: cache-debug-build-windows-restore
        uses: actions/cache/restore@main
        with:
          path: |
            .haxelib/
            export/release/windows/haxe/
            export/release/windows/obj/
          key: cache-windows-build

      - name: Installing Libraries
        run: |
          haxelib setup C:\haxelib
          haxelib install hxcpp --quiet
          haxelib install hmm --quiet
          haxelib install away3d
          haxelib run hmm install
      - name: Building
        run: haxelib run lime build windows -release

      - name: Clear Previous Cache
        uses: actions/github-script@main
        with:
          script: |
            try {
            	const caches = await github.rest.actions.getActionsCacheList({
            		owner: context.repo.owner,
            		repo: context.repo.repo,
            	})
            	if (typeof caches.data.actions_caches != null && caches.data.actions_caches.length > 0) {
            		for (const cache of caches.data.actions_caches) {
            			if (cache.key == "cache-windows-build") {
            				console.log('Clearing ' + cache.key + '...')
            				await github.rest.actions.deleteActionsCacheById({
            					owner: context.repo.owner,
            					repo: context.repo.repo,
            					cache_id: cache.id,
            				})
            				console.log("Previous Cache Cleared!")
            			}
            		}
            	}
            } catch (error) {
            	console.log(error.message)
            }
      - name: Save Current Cache
        id: cache-release-build-windows-save
        uses: actions/cache/save@main
        with:
          path: |
            .haxelib/
            export/release/windows/haxe/
            export/release/windows/obj/
          key: cache-windows-build

      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: Windows-Build
          path: export/release/windows/bin
          if-no-files-found: warn
  MacOS:
    runs-on: macos-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          submodules: true

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.1

      - name: Restore Previous Cache
        id: cache-debug-build-macos-restore
        uses: actions/cache/restore@main
        with:
          path: |
            .haxelib/
            export/release/macos/haxe/
            export/release/macos/obj/
          key: cache-macos-build

      - name: Installing Libraries
        run: |
          haxelib setup ~/haxelib
          haxelib install hxcpp --quiet
          haxelib install hmm --quiet
          haxelib install away3d
          haxelib run hmm install
      - name: Building
        run: haxelib run lime build mac -release

      - name: Clear Previous Cache
        uses: actions/github-script@main
        with:
          script: |
            try {
            	const caches = await github.rest.actions.getActionsCacheList({
            		owner: context.repo.owner,
            		repo: context.repo.repo,
            	})
            	if (typeof caches.data.actions_caches != null && caches.data.actions_caches.length > 0) {
            		for (const cache of caches.data.actions_caches) {
            			if (cache.key == "cache-macos-build") {
            				console.log('Clearing ' + cache.key + '...')
            				await github.rest.actions.deleteActionsCacheById({
            					owner: context.repo.owner,
            					repo: context.repo.repo,
            					cache_id: cache.id,
            				})
            				console.log("Previous Cache Cleared!")
            			}
            		}
            	}
            } catch (error) {
            	console.log(error.message)
            }
      - name: Save Current Cache
        id: cache-release-build-macos-save
        uses: actions/cache/save@main
        with:
          path: |
            .haxelib/
            export/release/macos/haxe/
            export/release/macos/obj/
          key: cache-macos-build

      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: MacOS-Build
          path: export/release/macos/bin
          if-no-files-found: warn
  Linux:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          submodules: true

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.1

      - name: Restore Previous Cache
        id: cache-debug-build-linux-restore
        uses: actions/cache/restore@main
        with:
          path: |
            .haxelib/
            export/release/linux/haxe/
            export/release/linux/obj/
          key: cache-linux-build

      - name: Installing Dependencies
        run: sudo apt-get install libvlc-dev libvlccore-dev 

      - name: Installing Libraries
        run: |
          haxelib setup ~/haxelib
          haxelib install hxcpp --quiet
          haxelib install hmm --quiet
          haxelib install away3d
          haxelib run hmm install
      - name: Building
        run: haxelib run lime build linux -release

      - name: Clear Previous Cache
        uses: actions/github-script@main
        with:
          script: |
            try {
            	const caches = await github.rest.actions.getActionsCacheList({
            		owner: context.repo.owner,
            		repo: context.repo.repo,
            	})
            	if (typeof caches.data.actions_caches != null && caches.data.actions_caches.length > 0) {
            		for (const cache of caches.data.actions_caches) {
            			if (cache.key == "cache-linux-build") {
            				console.log('Clearing ' + cache.key + '...')
            				await github.rest.actions.deleteActionsCacheById({
            					owner: context.repo.owner,
            					repo: context.repo.repo,
            					cache_id: cache.id,
            				})
            				console.log("Previous Cache Cleared!")
            			}
            		}
            	}
            } catch (error) {
            	console.log(error.message)
            }
      - name: Save Current Cache
        id: cache-release-build-linux-save
        uses: actions/cache/save@main
        with:
          path: |
            .haxelib/
            export/release/linux/haxe/
            export/release/linux/obj/
          key: cache-linux-build

      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: Linux-Build
          path: export/release/linux/bin
          if-no-files-found: warn
